#!/usr/bin/env python3
"""
Create detailed tables for PlantDex
‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.core.database import engine, SessionLocal
from app.models.plant_detailed import *
from app.models.plant import Plant
from app.models.user import User, Seller
from app.models.price import PlantPrice
from app.models.market import MarketTrend, PlantPriceIndex, TrendingPlant

def create_detailed_tables():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    print("üî® ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î...")
    
    try:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        Base.metadata.create_all(bind=engine)
        print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á
        print("\nüìã ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà:")
        detailed_tables = [
            "plant_images",
            "plant_propagations", 
            "plant_pest_diseases",
            "plant_seasonal_infos",
            "plant_shipping_infos",
            "plant_prices_detailed",
            "seller_business_details",
            "seller_shipping_policies",
            "seller_warranty_policies", 
            "seller_payment_policies",
            "seller_reviews",
            "trade_data",
            "demand_supply_data",
            "geographic_data",
            "digital_data"
        ]
        
        for table in detailed_tables:
            print(f"  - {table}")
            
        print(f"\nüéØ ‡∏£‡∏ß‡∏° {len(detailed_tables)} ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà")
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return False
    
    return True

def verify_tables():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß"""
    print("\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á...")
    
    try:
        db = SessionLocal()
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å
        from sqlalchemy import inspect
        inspector = inspect(engine)
        existing_tables = inspector.get_table_names()
        
        print(f"üìä ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(existing_tables)} ‡∏ï‡∏≤‡∏£‡∏≤‡∏á")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
        important_tables = [
            "plants", "plant_prices", "users", "sellers",
            "plant_images", "plant_propagations", "plant_prices_detailed"
        ]
        
        for table in important_tables:
            if table in existing_tables:
                print(f"  ‚úÖ {table}")
            else:
                print(f"  ‚ùå {table}")
        
        db.close()
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: {e}")

def show_sample_data_structure():
    """‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á"""
    print("\nüìù ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:")
    
    print("\nüå± ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡∏ä‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:")
    print("  - ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: plant_images (main, gallery, care_guide)")
    print("  - ‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå: plant_propagations (method, difficulty, success_rate)")
    print("  - ‡πÇ‡∏£‡∏Ñ‡πÅ‡∏•‡∏∞‡πÅ‡∏°‡∏•‡∏á: plant_pest_diseases (type, symptoms, prevention)")
    print("  - ‡∏§‡∏î‡∏π‡∏Å‡∏≤‡∏•: plant_seasonal_infos (planting, blooming, dormancy)")
    print("  - ‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á: plant_shipping_infos (fragility, packaging, distance)")
    
    print("\nüí∞ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:")
    print("  - ‡∏Ç‡∏ô‡∏≤‡∏î: height, width, pot_size, leaf_count, maturity")
    print("  - ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û: quality_grade, variegation_level, health_score")
    print("  - ‡∏§‡∏î‡∏π‡∏Å‡∏≤‡∏•: seasonal_multiplier, peak_season, off_season")
    print("  - ‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ: province, city, local_market_factor")
    print("  - ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡∏≤‡∏¢: platform, seller_type, verification_status")
    
    print("\nüè™ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:")
    print("  - ‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à: business_details (license, tax_id, years, revenue)")
    print("  - ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: shipping_policies (methods, zones, free_threshold)")
    print("  - ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô: warranty_policies (period, coverage, conditions)")
    print("  - ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: payment_policies (methods, installment, discounts)")
    print("  - ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß: seller_reviews (rating, categories, verified_purchase)")
    
    print("\nüìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏†‡∏π‡∏°‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå:")
    print("  - ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤: trade_data (import/export, country, quantity, value)")
    print("  - ‡∏≠‡∏∏‡∏õ‡∏™‡∏á‡∏Ñ‡πå-‡∏≠‡∏∏‡∏õ‡∏ó‡∏≤‡∏ô: demand_supply_data (search, social, stock, volatility)")
    print("  - ‡∏†‡∏π‡∏°‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå: geographic_data (climate, soil, cultivation)")
    print("  - ‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•: digital_data (social, search, influencer, news)")

if __name__ == "__main__":
    print("üöÄ PlantDex - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î")
    print("=" * 50)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    if create_detailed_tables():
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        verify_tables()
        
        # ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        show_sample_data_structure()
        
        print("\nüéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
        print("\nüí° ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:")
        print("  1. ‡πÉ‡∏ä‡πâ ChatGPT ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡∏ä‡∏´‡∏≤‡∏¢‡∏≤‡∏Å‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢")
        print("  2. ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå add_detailed_data.py ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        print("  3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï frontend ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà")
        
    else:
        print("‚ùå ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
        sys.exit(1) 